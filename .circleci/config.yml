version: 2.1
executors:
  default:
    docker:
    - image: circleci/golang:1.16

aliases:
- &restore_cache
  restore_cache:
    key: go-mod-v1-{{ checksum "go.sum" }}
- &save_cache
  save_cache:
    key: go-mod-v1-{{ checksum "go.sum" }}
    paths:
      - "/go/pkg/mod"

jobs:
  check-style:
    executor:
      name: default
    steps:
    - checkout
    - *restore_cache
    - run: make check-style
    - *save_cache

  check-modules:
    executor:
      name: default
    steps:
    - checkout
    - *restore_cache
    - run: make check-modules
    - *save_cache


  push-docker-pr:
    executor:
      name: default
    steps:
    - checkout
    - setup_remote_docker
    - run: make build-image push-docker-pr
    - run:
        name: Re-run Docker Push if fail
        command: |
            sleep 20
            make push-docker-pr
        when: on_fail

  push-docker:
    executor:
      name: default
    steps:
    - checkout
    - setup_remote_docker
    - run: make build-image push-docker
    - run:
        name: Re-run Docker Push if fail
        command: |
            sleep 20
            make push-docker
        when: on_fail

  scan-image:
    docker:
    - image: registry.gitlab.com/gitlab-org/security-products/analyzers/klar:latest
      environment:
        GIT_STRATEGY: none
        CI_APPLICATION_REPOSITORY: mattermost/mattermost-app-chaosengine
        CLAIR_DB_CONNECTION_STRING: "postgresql://postgres:password@localhost:5432/postgres?sslmode=disable&statement_timeout=60000"
        DOCKERFILE_PATH: "build/Dockerfile"
    - image: arminc/clair-db:latest
    steps:
    - checkout
    - run: |
        export CI_APPLICATION_TAG="${CIRCLE_SHA1:0:7}"
        export DOCKER_USER=$DOCKER_USERNAME
        /analyzer run
    - store_artifacts:
        path: gl-container-scanning-report.json
        destination: security-scan

workflows:
  version: 2
  
  ci-build:
    jobs:
    - check-style
    - check-modules
    - push-docker-pr:
        context: matterbuild-docker
        requires:
        - check-style
        - check-modules
    - scan-image:
        context: matterbuild-docker
        requires:
        - push-docker-pr

  master-build:
    jobs:
    - check-style:
        filters:
          branches:
            only:
            - master
    - check-modules:
        filters:
          branches:
            only:
            - master
    - push-docker:
          context: matterbuild-docker
          requires:
          - check-style
          - check-modules
          filters:
            branches:
              only:
              - master
